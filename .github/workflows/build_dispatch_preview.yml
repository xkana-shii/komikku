name: Remote Dispatch Preview Build
# Manually send a dispatch to build preview

on:
  # Dispatch or Manual triggers
  workflow_dispatch:

#  push:
#    branches:
#      - master
#      # - develop
#    paths:
#      - '**'
#      - '!**.md'
#      - '!.github/**'
#      - '.github/scripts/**'
#      - '.github/workflows/**'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trigger_preview_build:
    name: Trigger preview build
    runs-on: 'ubuntu-24.04'

    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Prepare build
        id: prepare_build
        run: |
          commit_count=$(git rev-list --count HEAD)
          echo "COMMIT_COUNT=$commit_count"
          echo "COMMIT_COUNT=$commit_count" >> $GITHUB_OUTPUT

      - name: Create Tag 'r${{ steps.prepare_build.outputs.COMMIT_COUNT }}'
        if: ${{ github.ref }} == "refs/heads/master"
        run: |
          git tag "r${{ steps.prepare_build.outputs.COMMIT_COUNT }}"
          git push origin "r${{ steps.prepare_build.outputs.COMMIT_COUNT }}"
          echo "New tag created: r${{ steps.prepare_build.outputs.COMMIT_COUNT }}"

      - name: Get branch names
        id: branch_names
        uses: tj-actions/branch-names@dde14ac574a8b9b1cedc59a1cf312788af43d8d8 # v8.2.1

      - name: Invoke workflow in preview repo
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
        with:
          workflow: build_app.yml
          repo: kana-shii/komikku-preview
          ref: "refs/heads/main"
          token: "${{ secrets.BOT_PAT }}"
          inputs: '{ "git-ref": "${{ steps.branch_names.outputs.current_branch }}" }'

      - name: Determine Latest v Tag
        id: latest_v_tag
        run: |
          # Fetch tags
          git fetch --tags
          # Get the latest v* tag
          latest_tag=$(git tag --list "v*" --sort=-v:refname | head -n 1)
          echo "LATEST_TAG=$latest_tag"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_OUTPUT

      - name: Create New v Tag (for release trigger)
        if: ${{ github.ref }} == "refs/heads/master"
        id: new_v_tag
        run: |
          # Parse the latest tag
          latest_tag="${{ steps.latest_v_tag.outputs.LATEST_TAG }}"
          if [ -z "$latest_tag" ]; then
            # Default to v1.0.0 if no v* tags exist
            new_tag="v1.0.0"
          else
            # Increment the patch version
            major=$(echo $latest_tag | cut -d'.' -f1 | cut -d'v' -f2)
            minor=$(echo $latest_tag | cut -d'.' -f2)
            patch=$(echo $latest_tag | cut -d'.' -f3)
            patch=$((patch + 1))
            new_tag="v${major}.${minor}.${patch}"
          fi
          # Create and push the new tag
          git tag "$new_tag"
          git push origin "$new_tag"
          echo "NEW_TAG=$new_tag"
          echo "NEW_TAG=$new_tag" >> $GITHUB_OUTPUT
          echo "Release trigger tag created: $new_tag"
